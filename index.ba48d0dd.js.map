{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,EAAM,IAAI,CAAC,EAAE,CACvB,EAAW,MAAM,IAAI,CAAC,EAAM,IAAI,EAAE,KAAK,CAAC,EAAG,IAoBjD,EAAQ,gBAAgB,CAAC,QAAS,SAAC,CAAnC,EACE,IAAM,EAAc,EAAE,MAAM,CAAC,OAAO,CAAC,MAErC,GAAI,EAAa,CACf,IAAM,EAAc,EAAY,SAAS,CAEzC,EAAS,IAAI,CAAC,SAAC,CAAA,CAAG,CAAlB,EACE,IAxBA,EAAM,EAwBA,EAAS,EAAE,KAAK,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,GAC9C,EAAS,EAAE,KAAK,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,GAEpD,MAjBJ,CARI,AAAgB,IAyBqB,GAxBvC,EAAO,WAwBgB,GAvBvB,EAAO,WAuBwB,IAtBN,IAsBc,IArBvC,EAAO,AAqBgB,EArBd,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,IAC/B,EAAO,AAoBwB,EApBtB,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,KAG7B,AAAC,MAAM,IAAU,MAAM,IAGlB,AAcgB,EAdd,aAAa,CAcS,GAhBxB,EAAO,CAiBd,GAEA,EAAS,OAAO,CAAC,SAAC,CAAlB,EAA0B,OAAA,EAAM,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,E,EACzD,CACF,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar mainRow = table.rows[0];\nvar dataRows = Array.from(table.rows).slice(1, 13);\nfunction compareValues(a, b, columnIndex) {\n    var aNum, bNum;\n    if (columnIndex === 2) {\n        aNum = parseFloat(a);\n        bNum = parseFloat(b);\n    } else if (columnIndex === 3) {\n        aNum = a.slice(1).replace(\",\", \"\");\n        bNum = b.slice(1).replace(\",\", \"\");\n    }\n    if (!isNaN(aNum) && !isNaN(bNum)) return aNum - bNum;\n    else return a.localeCompare(b);\n}\nmainRow.addEventListener(\"click\", function(e) {\n    var clickedCell = e.target.closest(\"th\");\n    if (clickedCell) {\n        var columnIndex = clickedCell.cellIndex;\n        dataRows.sort(function(a, b) {\n            var aValue = a.cells[columnIndex].textContent.trim();\n            var bValue = b.cells[columnIndex].textContent.trim();\n            return compareValues(aValue, bValue, columnIndex);\n        });\n        dataRows.forEach(function(row) {\n            return table.tBodies[0].appendChild(row);\n        });\n    }\n});\n\n//# sourceMappingURL=index.ba48d0dd.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst mainRow = table.rows[0];\nconst dataRows = Array.from(table.rows).slice(1, 13);\n\nfunction compareValues(a, b, columnIndex) {\n  let aNum, bNum;\n\n  if (columnIndex === 2) {\n    aNum = parseFloat(a);\n    bNum = parseFloat(b);\n  } else if (columnIndex === 3) {\n    aNum = a.slice(1).replace(',', '');\n    bNum = b.slice(1).replace(',', '');\n  }\n\n  if (!isNaN(aNum) && !isNaN(bNum)) {\n    return aNum - bNum;\n  } else {\n    return a.localeCompare(b);\n  }\n}\n\nmainRow.addEventListener('click', (e) => {\n  const clickedCell = e.target.closest('th');\n\n  if (clickedCell) {\n    const columnIndex = clickedCell.cellIndex;\n\n    dataRows.sort((a, b) => {\n      const aValue = a.cells[columnIndex].textContent.trim();\n      const bValue = b.cells[columnIndex].textContent.trim();\n\n      return compareValues(aValue, bValue, columnIndex);\n    });\n\n    dataRows.forEach((row) => table.tBodies[0].appendChild(row));\n  }\n});\n"],"names":["table","document","querySelector","mainRow","rows","dataRows","Array","from","slice","addEventListener","e","clickedCell","target","closest","columnIndex","cellIndex","sort","a","b","aNum","bNum","aValue","cells","textContent","trim","bValue","parseFloat","replace","isNaN","localeCompare","forEach","row","tBodies","appendChild"],"version":3,"file":"index.ba48d0dd.js.map"}